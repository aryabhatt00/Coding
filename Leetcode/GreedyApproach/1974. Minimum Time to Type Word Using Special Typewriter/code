| Operation            | Time Complexity | Space Complexity |
| -------------------- | --------------- | ---------------- |
| Read each character  | O(n)            | O(1)             |
| Rotation Calculation | O(1)            | O(1)             |
| Total Time Update    | O(1)            | O(1)             |


****************************************************************

#Java

class Solution {
    public int minTimeToType(String word) {
        char current='a';
        int totalSeconds=0;
        for(char i: word.toCharArray()){
            char target=i;
           
           
            if(target==current){
                totalSeconds+=1;
            }
            else{
               int rightRotate=(current-target+26)%26;
               int leftRotate=(target-current+26)%26;
                totalSeconds+=Math.min(rightRotate,leftRotate)+1;
            }
            current=target;
        }
        return totalSeconds;
    }
}

****************************************************************

#Python

class Solution:
    def minTimeToType(self, word: str) -> int:
        current = 'a'
        total_seconds = 0
        for char in word:
            target = char
            if target == current:
                total_seconds += 1
            else:
                right_rotate = (ord(current) - ord(target) + 26) % 26
                left_rotate = (ord(target) - ord(current) + 26) % 26
                total_seconds += min(right_rotate, left_rotate) + 1
            current = target
        return total_seconds

****************************************************************
