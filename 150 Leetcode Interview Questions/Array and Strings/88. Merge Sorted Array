#Java
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {

    int i=m-1;
    int j=n-1;
    int k=m+n-1;
    while ( i>=0 && j>=0 ){
        if (nums1[i]>nums2[j]){
            nums1[k]=nums1[i];
            i--;
        }
        else{
            nums1[k]=nums2[j];
            j--;
        }
        k--;
    }

    while (j>=0){
        nums1[k]=nums2[j];
        k--;
        j--;
    }   
}
}


#Python
class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """
        Do not return anything, modify nums1 in-place instead.
        """
        if len(nums2)==0:
            return(nums1.sort())
        else:
            count=0
            for i in range(len(nums1)):
                if nums1[i]==0:
                    nums1[i]=nums2[count]
                    count+=1
                    if count>len(nums2)-1:
                        break
            print(nums1.sort())   
